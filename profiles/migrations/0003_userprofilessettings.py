# Generated by Django 3.1.13 on 2021-11-22 13:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0062_comment_models_and_pagesubscription'),
        ('profiles', '0002_securityquestionindexpage'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfilesSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_mobile_number_field', models.BooleanField(default=False, verbose_name='Add mobile number field to registration')),
                ('mobile_number_required', models.BooleanField(default=False, verbose_name='Mobile number required')),
                ('country_code', models.CharField(blank=True, help_text='For example: +27 for South Africa, +44 for England', max_length=4, null=True, verbose_name="The country code that should be added to a user's number for this site")),
                ('prevent_phone_number_in_username', models.BooleanField(default=False, verbose_name='Prevent phone number in username / display name')),
                ('show_email_field', models.BooleanField(default=False, verbose_name='Add email field to registration')),
                ('email_required', models.BooleanField(default=False, verbose_name='Email required')),
                ('prevent_email_in_username', models.BooleanField(default=False, verbose_name='Prevent email in username / display name')),
                ('show_security_question_fields', models.BooleanField(default=False, verbose_name='Add security question fields to registration')),
                ('security_questions_required', models.BooleanField(default=False, verbose_name='Security questions required')),
                ('num_security_questions', models.PositiveSmallIntegerField(default=1, verbose_name='Number of security questions asked for password recovery')),
                ('password_recovery_retries', models.PositiveSmallIntegerField(default=5, verbose_name='Max number of password recovery retries before lockout')),
                ('activate_display_name', models.BooleanField(default=True, verbose_name='Activate Display Name')),
                ('capture_display_name_on_reg', models.BooleanField(default=False, help_text='If Display Name is activated, and Capture On Registration is not activated, The display name field will be captured on done page.', verbose_name='Capture On Registration')),
                ('display_name_required', models.BooleanField(default=False, verbose_name='Display Name Required')),
                ('activate_gender', models.BooleanField(default=False, verbose_name='Activate Gender')),
                ('capture_gender_on_reg', models.BooleanField(default=False, help_text='If Gender is activated, and Capture On Registration is not activated, The Gender field will be captured on done page.', verbose_name='Capture On Registration')),
                ('gender_required', models.BooleanField(default=False, verbose_name='Gender Required')),
                ('activate_dob', models.BooleanField(default=True, verbose_name='Activate Date Of Birth')),
                ('capture_dob_on_reg', models.BooleanField(default=False, help_text='If Date Of Birth is activated, and Capture On Registration is not activated, The Date Of Birth field will be captured on done page.', verbose_name='Capture On Registration')),
                ('dob_required', models.BooleanField(default=False, verbose_name='Date Of Birth Required')),
                ('activate_location', models.BooleanField(default=False, verbose_name='Activate Location')),
                ('capture_location_on_reg', models.BooleanField(default=False, help_text='If Location is activated, and Capture On Registration is not activated, The Location field will be captured on done page.', verbose_name='Capture On Registration')),
                ('location_required', models.BooleanField(default=False, verbose_name='Location Required')),
                ('activate_education_level', models.BooleanField(default=False, verbose_name='Activate Education Level')),
                ('capture_education_level_on_reg', models.BooleanField(default=False, help_text='If Education Level is activated, and Capture On Registration is not activated, The Education Level field will be captured on done page.', verbose_name='Capture On Registration')),
                ('activate_education_level_required', models.BooleanField(default=False, verbose_name='Education Level Required')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
                ('terms_and_conditions', models.ForeignKey(blank=True, help_text='Choose a footer page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
